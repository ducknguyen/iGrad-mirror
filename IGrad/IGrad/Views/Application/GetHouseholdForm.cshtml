@model IGrad.Models.User.UserModel
@{
    /**/

    ViewBag.Title = "GetHouseholdForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript" src="~/Scripts/application.js"></script>
<script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>
<script type="text/javascript">
    function loadEmergencyContactInfoForm() {
        hideTarget('add-emergency-contact-button');
        showTarget('add-emergency-contact');110
        $("#add-emergency-contact").load('@Url.Action("GetAddEmergencyContact", "Application")');
    }

    function loadGuardianInfoForm() {
        hideTarget('add-guardian-button');
        showTarget('add-guardian');
        $("#add-guardian").load('@Url.Action("GetAddGuardian", "Application")');
    }

    function loadSiblingInfoForm() {
        hideTarget('add-sibling-button');
        showTarget('add-sibling');
        $("#add-sibling").load('@Url.Action("GetAddSibling", "Application")');
    }

    function loadHomelessInfoForm() {
        showTarget('homeless-container');
        $("#homeless-information").load('@Url.Action("GetAddHomelessAssistanceForm", "Application")');
    }


    function deleteEmergencyContact(fieldId) {
        $.ajax({
            type: "POST",
            url: '/Application/DeleteEmergencyContact',
            data: { 'fieldId': fieldId },
            success: hideTarget('ec_' + fieldId)
        });
    }

    function deleteGuardian(fieldId) {
        $.ajax({
            type: "POST",
            url: '/Application/DeleteGuardian',
            data: { 'fieldId': fieldId },
            success: hideTarget('guardian_' + fieldId)
        });
    }

    function deleteSibling(fieldId) {
        $.ajax({
            type: "POST",
            url: '/Application/DeleteSibling',
            data: { 'fieldId': fieldId },
            success: hideTarget('sibling_' + fieldId)
        });
    }

</script>
@using (Html.BeginForm("GetHouseholdForm", "Application", FormMethod.Post, new { enctype = "multipart/form-data", @id = "household-form" }))
{
    <h3>Household Information</h3>
    <small class="form-text required-marker-indicator">* required fields.</small>
    <hr>

    <div class="" id="living-situation">
        <h4 class="bg-info">Student lives with :</h4>

        <div class="row">
            <div class="form-group col-md-2">
                <p>@Html.CheckBoxFor(model => model.LivesWith.LivesWithBothParents, htmlAttributes: new { @class = "" }) Both Parents</p>
            </div>
            <div class="form-group col-md-2">
                <p>@Html.CheckBoxFor(model => model.LivesWith.LivesWithMotherOnly, htmlAttributes: new { @class = "" }) Mother Only</p>
            </div>
            <div class="form-group col-md-2">
                <p>@Html.CheckBoxFor(model => model.LivesWith.LivesWithFatherOnly, htmlAttributes: new { @class = "" }) Father Only</p>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-2">
                <p>@Html.CheckBoxFor(model => model.LivesWith.LivesWithGrandparents, htmlAttributes: new { @class = "" }) Grandparents</p>
            </div>
            <div class="form-group col-md-2">
                <p>@Html.CheckBoxFor(model => model.LivesWith.LivesWithSelf, htmlAttributes: new { @class = "" }) Own Residence</p>
            </div>
            <div class="form-group col-md-2">
                <p>@Html.CheckBoxFor(model => model.LivesWith.HomelessDistressed, htmlAttributes: new { @class = "", @onclick= "loadHomelessInfoForm()" }) Homeless / Distressed</p>
            </div>
        </div>

  

        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.LivesWith.TotalPeopleInResidence, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.LivesWith.TotalPeopleInResidence, "{0:#.#}", htmlAttributes: new { @class = "form-control", @placeholder = "Number of residence" })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.LivesWith.AnnualHouseHoldIncome, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.LivesWith.AnnualHouseHoldIncome, "{0:#.#}", htmlAttributes: new { @class = "form-control", @placeholder = "Income" })
            </div>
        </div>

        <h4 class="bg-info">Current Residence</h4>
        <div class="row">
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.ResidentAddress.Street, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.ResidentAddress.Street, htmlAttributes: new { @class = "form-control", @placeholder = "Street address" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.ResidentAddress.City, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.ResidentAddress.Street, htmlAttributes: new { @class = "form-control", @placeholder = "City" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.ResidentAddress.State, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.ResidentAddress.Street, htmlAttributes: new { @class = "form-control", @placeholder = "State" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.ResidentAddress.Zip, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(model => model.ResidentAddress.Zip, "{0:#.#}", new { @class = "form-control", @placeholder = "Zip" })
                @Html.ValidationMessageFor(model => model.ResidentAddress.Zip, "", new { @class = "text-danger" })
            </div>
        </div>


        <h4>Address is mailing address? *</h4>
        <div class="row">
            <div class="form-group col-md-12">
                @Html.RadioButtonFor(model => model.ResidentAddressIsMailingAddress, true, htmlAttributes: new { @class = "", @onclick = "hideTarget('mailing-address')" })Yes
                @Html.RadioButtonFor(model => model.ResidentAddressIsMailingAddress, false, htmlAttributes: new { @class = "", @onclick = "showTarget('mailing-address')" })No
            </div>
        </div>


        <div class="container hidden" id="mailing-address">
            <h4>Please Specify Mailing Address</h4>
            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.MailingAddress.Street, htmlAttributes: new { @class = "" })
                    @Html.TextBoxFor(model => model.MailingAddress.Street, htmlAttributes: new { @class = "form-control", @placeholder = "Street address" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.MailingAddress.City, htmlAttributes: new { @class = "" })
                    @Html.TextBoxFor(model => model.MailingAddress.Street, htmlAttributes: new { @class = "form-control", @placeholder = "City" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.MailingAddress.State, htmlAttributes: new { @class = "" })
                    @Html.TextBoxFor(model => model.MailingAddress.Street, htmlAttributes: new { @class = "form-control", @placeholder = "State" })
                </div>
            </div>
            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.MailingAddress.Zip, htmlAttributes: new { @class = "" })
                    @Html.TextBoxFor(model => model.MailingAddress.Zip, "{0:#.#}", new { @class = "form-control", @placeholder = "Zip" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.MailingAddress.POBox, htmlAttributes: new { @class = "" })
                    @Html.TextBoxFor(model => model.MailingAddress.POBox, htmlAttributes: new { @class = "form-control", @placeholder = "PO Box" })
                    @Html.ValidationMessageFor(model => model.ResidentAddress.Zip, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
}
<hr />

<div class="container hidden" id="homeless-container">
    <h3>Homeless / Distressed Additional Information</h3>
    <button class="btn btn-default" type="button" onclick="showTarget('homeless-information')">Show</button>
    <button class="btn btn-default" type="button" onclick="hideTarget('homeless-information')">Hide</button>
    <div class="container" id="homeless-information">

    </div>
</div>

<!-- ADD EMERGENCY CONTACT -->
<div class="wrapper" id="add-emergency-contact-container">
    <h4 class="bg-info">Emergency Contacts</h4>
    <div class="" id="emergency-contacts">
        <!-- emergency partial view here-->
        @{if (Model.EmergencyContacts != null)
            {
                Html.RenderPartial("_GetEmergencyContacts", Model.EmergencyContacts.ToList());
            }
        }
    </div>
    <div class="" id="add-emergency-contact">
    </div>
    <button class="btn btn-primary" id="add-emergency-contact-button" onclick="loadEmergencyContactInfoForm()">Add Emergency Contact</button>
</div>

<br /><br />

<!-- ADD GUARDIAN -->
<div class="wrapper" id="add-guardian-container">
    <h4 class="bg-info">Guardians</h4>
    <div class="" id="guardians">
        <!-- guardians partial view here-->
        @{if (Model.Guardians != null)
            {
                Html.RenderPartial("_GetGuardianInfo", Model.Guardians.ToList());
            }
        }
    </div>
    <button class="btn btn-primary" id="add-guardian-button" onclick="loadGuardianInfoForm()">Add Parent/Guardian</button>
    <div class="hidden" id="add-guardian">
    </div>
</div>

<br /><br />

<!-- ADD SIBLINGS -->
<div class="wrapper" id="add-sibling-container">
    <h4 class="bg-info">Siblings</h4>
    <div class="siblings" id="siblings">
        <!-- sibling partial view here-->
        @{if (Model.Siblings != null)
            {
                Html.RenderPartial("_GetSiblingInfo", Model.Siblings.ToList());
            }
        }
    </div>
    <button class="btn btn-primary" id="add-sibling-button" onclick="loadSiblingInfoForm()">Add Sibling</button>
    <div class="hidden" id="add-sibling">
    </div>
</div>


<div class="form-row">
    <div class="pull-right">
        <button class="btn btn-primary btn-lg btn-success" type="submit" form="household-form">
            Continue
            <i class="fas fa-caret-right"></i>
        </button>
    </div>
</div>

<br /><br />

