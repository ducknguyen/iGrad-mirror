@model IGrad.Models.User.Sibling

@using (Ajax.BeginForm("SubmitAddSiblingInfo", "Application", new AjaxOptions()
{
    HttpMethod = "Post",
    UpdateTargetId = "siblings",
    InsertionMode = InsertionMode.Replace,

}))
{
    @Html.AntiForgeryToken()
<div class="" id="add-sibling-form">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.FName, htmlAttributes: new { @class = "control-label " })
            @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First" } })
        </div>
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.LName, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.LName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last" } })
        </div>
        <div class="form-group col-md-2">
            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Age, "{0:#.#}",  new { @class = "form-control" , @placeholder = "12" } )
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.School, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.School, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group col-md-2">
            @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.AttendedKentSchoolDistrict, htmlAttributes: new { @class = "control-label" })
            <div class="row">
                @Html.RadioButtonFor(model => model.AttendedKentSchoolDistrict, true, new { htmlAttributes = new { @class = "form-control" } }) Yes
                @Html.RadioButtonFor(model => model.AttendedKentSchoolDistrict, false, new { htmlAttributes = new { @class = "form-control" } }) No
            </div>
        </div>
    </div>

    <br />
    <div class="row">
        <div class="col-md-12">
            <button id="submitButton" type="submit" class="btn btn-primary" onclick="hideTarget('add-sibling');showTarget('add-sibling-button')">Add Sibling</button>
            <button id="cancelButton" type="button" class="btn" onclick="hideTarget('add-sibling');showTarget('add-sibling-button')">Cancel</button>
        </div>
    </div>
</div>
}
