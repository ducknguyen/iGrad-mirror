@model IGrad.Models.User.Guardian

@using (Ajax.BeginForm("SubmitGuardianInfo", "Application", new AjaxOptions()
{
    HttpMethod = "Post",
    UpdateTargetId = "primary-guardians",
    InsertionMode = InsertionMode.Replace,

}))
{
    @Html.AntiForgeryToken()
    <div class="" id="add-primary-guardian-form">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Name.FName, htmlAttributes: new { @class = "control-label " })
                @Html.EditorFor(model => model.Name.FName, new { htmlAttributes = new { @class = "form-control", @placeholder = "First" } })
            </div>
            <div class="form-group col-md-2">
                @Html.LabelFor(model => model.Name.MName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name.MName, new { htmlAttributes = new { @class = "form-control", @placeholder = "M.I" } })
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Name.LName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name.LName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Last" } })
            </div>
            <div class="form-group col-md-2">
                @Html.LabelFor(model => model.Relationship, htmlAttributes: new { @class = "" })
                @Html.DropDownListFor(model => model.Relationship, Model.RelationshipTypeSelectList, htmlAttributes: new { @class = "form-control dropdown-toggle" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PhoneOne, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PhoneOne.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = CustomHelper.GetPhoneNumberPlaceholder() } })
            </div>
            <div class="form-group col-md-2">
                @Html.LabelFor(model => model.PhoneOne.PhoneType, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.PhoneOne.PhoneType, Model.PhoneOne.PhoneTypeSelectList, new { @class = "form-control dropdown-toggle" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.PhoneTwo, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PhoneTwo.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = CustomHelper.GetPhoneNumberPlaceholder() } })
            </div>
            <div class="form-group col-md-2">
                @Html.LabelFor(model => model.PhoneTwo.PhoneType, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.PhoneTwo.PhoneType, Model.PhoneTwo.PhoneTypeSelectList, new { @class = "form-control dropdown-toggle" })
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = CustomHelper.GetEmailPlaceholder() } })
            </div>
            <div class="form-group col-md-4">
                @Html.EditorFor(model => model.IsActiveMilitary, new { htmlAttributes = new { @class = "required", @placeholder = "" } })
                @Html.LabelFor(model => model.IsActiveMilitary, htmlAttributes: new { @class = "control-label" })
            </div>

            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.GuardianResidenceType, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.GuardianResidenceType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>

        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-4">
            @Html.LabelFor(model => model.Address.Street, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Address.Street, new { htmlAttributes = new { @class = "form-control", @placeholder = "Street Address" } })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.Address.City, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control", @placeholder = "City" } })
        </div>
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.Address.State, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Address.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "State" } })
        </div>
        <div class="form-group col-md-2">
            @Html.LabelFor(model => model.Address.POBox, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Address.POBox, new { htmlAttributes = new { @class = "form-control", @placeholder = "PO" } })
        </div>

    </div>

    <br />
        <div class="row">
            <div class="col-md-12">
                <button id="submitButton" type="submit" class="btn btn-primary" onclick="hideTarget('add-primary-guardian'); showTarget('add-primary-guardian-button')">Add Guardian</button>
                <button id="cancelButton" type="button" class="btn" onclick="showTarget('add-primary-guardian-button');hideTarget('add-primary-guardian')">Cancel</button>
            </div>
        </div>
}