@model IGrad.Models.User.UserModel
@{
    /**/

    ViewBag.Title = "Education | iGrad";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("/Content/educationform.css")
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js" type="text/javascript"></script>

<h3>Previous Education</h3>
<small class="form-text required-marker-indicator">* required fields.</small>
<hr>

<!-- ADD PREVIOUS HIGH SCHOOL-->
<h4 class="bg-info">High School Information</h4>
<h4 class="required-marker">Add A Previous High School</h4>
<div class="" id="highschool-info">
    @{if (Model.SchoolInfo.HighSchoolInformation != null)
        {
            Html.RenderPartial("_GetHighSchoolInfo", Model.SchoolInfo.HighSchoolInformation);
        }}
</div>
<div class="" id="school-information">
    <!--Form to add High School Information will be rendered here-->
</div>

<input type="hidden" name="highschool-history" class="progressbar-checker" value="">
<button class="btn btn-success" id="add-new-highschool-button" onclick="loadHighSchoolInfoForm()">Add High School</button>

<br /><br />

<!-- FORM -->
@using (Html.BeginForm("GetEducationForm", "Application", FormMethod.Post, new { enctype = "multipart/form-data", @id = "education-form" }))
{
    <!-- GENERAL INFORMATION -->
    <div class="wrapper">
        <h4 class="bg-info">General Information</h4>
        <div class="row">
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.SchoolInfo.IsExpelledOrSuspended, htmlAttributes: new { @class = "control-label required-marker" })
                <br />
                @Html.RadioButtonFor(model => model.SchoolInfo.IsExpelledOrSuspended, true, new { @class = "radio-checker" }) Yes
                @Html.RadioButtonFor(model => model.SchoolInfo.IsExpelledOrSuspended, false, new { @class = "radio-checker" }) No
                @Html.HiddenFor(model => model.SchoolInfo.IsExpelledOrSuspended, new { @class = "progressbar-checker" })
            </div>
            <div class="form-group col-md-3">
                @Html.LabelFor(model => model.SchoolInfo.LastYearAttended, htmlAttributes: new { @class = "control-label required-marker" })
                @Html.TextBoxFor(model => model.SchoolInfo.LastYearAttended, "{0:#.#}", htmlAttributes: new { @class = "form-control", @placeholder = "Year attended", required = "required" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.SchoolInfo.CurrentGrade, htmlAttributes: new { @class = "control-label required-marker" })
                @Html.TextBoxFor(model => model.SchoolInfo.CurrentGrade, "{0:#.#}", htmlAttributes: new { @class = "form-control", @placeholder = "Current grade", required = "required" })
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.SchoolInfo.SchoolOpinion, htmlAttributes: new { @class = "control-label required-marker" })
                @Html.TextAreaFor(model => model.SchoolInfo.SchoolOpinion, htmlAttributes: new { @class = "form-control", @rows = 3, @placeholder = "Student opinions...", required = "required" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.SchoolInfo.HowDoingInSchool, htmlAttributes: new { @class = "control-label required-marker" })
                @Html.TextAreaFor(model => model.SchoolInfo.HowDoingInSchool, htmlAttributes: new { @class = "form-control", @rows = 3, @placeholder = "Student performance...", required = "required" })
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.SchoolInfo.StrengthAndWeakness, htmlAttributes: new { @class = "control-label required-marker" })
                @Html.TextAreaFor(model => model.SchoolInfo.StrengthAndWeakness, htmlAttributes: new { @class = "form-control", @rows = 4, @placeholder = "Strengths and improvements...", required = "required" })
            </div>
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.SchoolInfo.ParentAdditionalFeedbackInfo, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.SchoolInfo.ParentAdditionalFeedbackInfo, htmlAttributes: new { @class = "form-control", @rows = 4, @placeholder = "Comments..." })
            </div>
        </div>
    </div>


    <div class="wrapper row">
        <!-- PRIOR EDUCATION -->
        <div class="col-md-6">
            <h4 class="bg-info">
                Prior Education
                <span data-toggle="tooltip" data-placement="right" title="Your answer give us information about the knowledge and skills your child is
                      bringing to school. It may also enable the school district to receive addition federal funding to provide support to your child." class="user-hint">
                    <i class="fas fa-info-circle"></i>
                </span>
            </h4>
            <div class="form-group">
                @Html.LabelFor(model => model.SchoolInfo.PriorEducation.AttendedSchoolinUS, htmlAttributes: new { @class = "control-label required-marker" })
                <br />
                @Html.RadioButtonFor(model => model.SchoolInfo.PriorEducation.AttendedSchoolinUS, true, new { @class = "radio-checker" }) Yes
                @Html.RadioButtonFor(model => model.SchoolInfo.PriorEducation.AttendedSchoolinUS, false, new { @class = "radio-checker" }) No
                @Html.HiddenFor(model => model.SchoolInfo.PriorEducation.AttendedSchoolinUS, new { @class = "progressbar-checker" })
            </div>

            <!-- OUTSIDE THE U.S. -->
            <div class="form-group">
                @Html.LabelFor(model => model.SchoolInfo.PriorEducation.hasEducationOutsideUS, htmlAttributes: new { @class = "control-label required-marker" })
                <br />
                @Html.RadioButtonFor(model => model.SchoolInfo.PriorEducation.hasEducationOutsideUS, true, new { @class = "radio-checker had-outside" }) Yes
                @Html.RadioButtonFor(model => model.SchoolInfo.PriorEducation.hasEducationOutsideUS, false, new { @class = "radio-checker" }) No
                @Html.HiddenFor(model => model.SchoolInfo.PriorEducation.hasEducationOutsideUS, new { @class = "progressbar-checker" })
            </div>

            <div id="education-outside-us">
                <div class="form-group">
                    @Html.LabelFor(model => model.SchoolInfo.PriorEducation.MonthsOfEducationOutsideUS, htmlAttributes: new { @class = "control-label required-marker" })
                    @Html.TextBoxFor(model => model.SchoolInfo.PriorEducation.MonthsOfEducationOutsideUS, htmlAttributes: new { @class = "form-control", @placeholder = "Month(s)", required = "required" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SchoolInfo.PriorEducation.LanguageOfEducationOutsideUS, htmlAttributes: new { @class = "control-label required-marker", required = "required" })
                    @Html.TextBoxFor(model => model.SchoolInfo.PriorEducation.LanguageOfEducationOutsideUS, htmlAttributes: new { @class = "form-control", @placeholder = "Language spoken", required = "required" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SchoolInfo.PriorEducation.firstAttendanceOfUSEducation, htmlAttributes: new { @class = "control-label required-marker" })
                    @Html.EditorFor(model => model.SchoolInfo.PriorEducation.firstAttendanceOfUSEducation, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "01/01/2000", required = "required" } })
                </div>
            </div>
        </div>

        <!-- SPECIAL PROGRAMS -->
        <div class="col-md-6">
            <h4 class="bg-info">Special programs</h4>
            <p class="">Did the student participate in any of the following programs? <small>(Check all that apply)</small></p>

            <br />
            @Html.CheckBoxFor(model => model.QualifiedOrEnrolledInProgam.SpecialEducation, htmlAttributes: new { @class = "" })
            @Html.LabelFor(model => model.QualifiedOrEnrolledInProgam.SpecialEducation, htmlAttributes: new { @class = "" })
            <br />
            @Html.CheckBoxFor(model => model.QualifiedOrEnrolledInProgam.plan504, htmlAttributes: new { @class = "" })
            @Html.LabelFor(model => model.QualifiedOrEnrolledInProgam.plan504, htmlAttributes: new { @class = "" })
            <br />
            @Html.CheckBoxFor(model => model.QualifiedOrEnrolledInProgam.Title, htmlAttributes: new { @class = "" })
            @Html.LabelFor(model => model.QualifiedOrEnrolledInProgam.Title, htmlAttributes: new { @class = "" })
            <br />
            @Html.CheckBoxFor(model => model.QualifiedOrEnrolledInProgam.LAP, htmlAttributes: new { @class = "" })
            @Html.LabelFor(model => model.QualifiedOrEnrolledInProgam.LAP, htmlAttributes: new { @class = "" })
            <br />
            @Html.CheckBoxFor(model => model.QualifiedOrEnrolledInProgam.HighlyCapable, htmlAttributes: new { @class = "" })
            @Html.LabelFor(model => model.QualifiedOrEnrolledInProgam.HighlyCapable, htmlAttributes: new { @class = "" })
            <br />
            @Html.CheckBoxFor(model => model.QualifiedOrEnrolledInProgam.EnglishAsSecondLanguage, htmlAttributes: new { @class = "" })
            @Html.LabelFor(model => model.QualifiedOrEnrolledInProgam.EnglishAsSecondLanguage, htmlAttributes: new { @class = "" })
        </div>
    </div>
}
<!-- END FORM -->
<!-- VIOLATIONS CHECK -->
<div class="wrapper">
    <h4 class="bg-info">Previous Violation</h4>
    <h4 class="required-marker">Has the student had a school violation?</h4>
    <div id="violation-container">
        @{if (Model.SchoolInfo.PreviousSchoolViolation == null)
            {
                <div class="">
                    <button class="btn btn-success" onclick="loadViolationInfo()">Yes, add violation</button>
                    <button class="btn " value="" onclick="hideTarget('violation-container')">No</button>
                </div>
            }
            else
            {
                <div class="" id="existing-violation-information">
                    @{Html.RenderPartial("_GetViolationInfo", Model.SchoolInfo.PreviousSchoolViolation);}
                </div>
            }
        }
        <div class="" id="add-violation-information">
        </div>
    </div>
    <input type="hidden" name="violation-history" class="progressbar-checker" value="">
</div>


<div class="form-row">
    <div class="pull-right">
        <button class="btn btn-primary btn-lg btn-success" type="submit" form="education-form">
            Continue
            <i class="fas fa-caret-right"></i>
        </button>
    </div>
</div>

<script src="~/Scripts/progress-bar.js" type="text/javascript"></script>
<script src="~/Scripts/education-form.js" type="text/javascript"></script>

<script type="text/javascript">
    // LOAD FUNCTIONS
    function loadHighSchoolInfoForm() {
        hideTarget('add-new-highschool-button');
        showTarget('school-information');
        $("#school-information").load('@Url.Action("AddHighSchoolInfoPartial", "Application")');
    }

    function loadViolationInfo() {
        showTarget('add-violation-information');
        $("#add-violation-information").load('@Url.Action("GetAddViolation", "Application")');
    }

     //PROCESS ADD HIGH SCHOOL
    function processAddHighSchool() {
        recordSchoolInfo();
        hideTarget('school-information');
        showTarget('add-new-highschool-button');
    }

    function recordSchoolInfo() {
        var schoolInfo = [];

        // add name, year and last attended status to school info
        $("form#add-hs-form input.hs-info").each(function () {
            var current = $(this);
            schoolInfo.push(current.val());
        });

        var isLastAttended = $('form#add-hs-form input:radio[name="isLastHighSchoolAttended"]:checked').val();
        schoolInfo.push(isLastAttended);

        //create object and add to highschool list according to last attended status
        var newHighSchool = new HighSchoolObject(schoolInfo[0], schoolInfo[1], schoolInfo[2]);

        addToHighSchoolList(newHighSchool);
        updateHighSchoolHistory(highSchoolList);
        trackFormProgress();
    }


    // DELETE FUNCTIONS
    function deleteHighSchoolRecord(fieldId) {
        processDeleteHighSchool('highSchool_' + fieldId);
        $.ajax({
            type: "POST",
            url: '/Application/DeleteHighSchool',
            data: { "fieldId": fieldId },
            success: removeTargert('highSchool_' + fieldId)
        });
    }

    function deleteViolation(fieldId) {
        $.ajax({
            type: "POST",
            url: '/Application/DeleteViolation',
            success: hideTarget('violation_' + fieldId)
        });
    }

    // HELPER FUNCTIONS
    function hideTarget(targetId) {
        $('#' + targetId).addClass('hidden');
    }

    function showTarget(targetId) {
        $('#' + targetId).removeClass('hidden');
    }

    function removeTargert(targetId) {
        $('#' + targetId).remove();
    }
</script>